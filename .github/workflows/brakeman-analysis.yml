# This workflow integrates Brakeman with GitHub's Code Scanning feature
# Brakeman is a static analysis security vulnerability scanner for Ruby on Rails applications

name: Brakeman Scan

# This section configures the trigger for the workflow. Feel free to customize depending on your convention
on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]
  schedule:
    - cron: '0 3 * * *'
  
jobs:
  brakeman-scan:
    name: Brakeman Scan
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2.3.3

    # Customize the ruby version depending on your needs
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1.46.0
      with:
        ruby-version: 2.6.6

    - name: Setup Brakeman
      run: |
        gem install brakeman

    # Execute Brakeman CLI and generate a SARIF output with the security issues identified during the analysis
    - name: Scan
#      continue-on-error: true
      run: |
         brakeman -f sarif -o output.sarif.json .
#        brakeman -f json > brakeman.json || exit 0

    # Upload the SARIF file generated in the previous step
#     - name: Upload SARIF
#       uses: github/codeql-action/upload-sarif@v1
#       with:
#         sarif_file: output.sarif.json
  
    - name: Brakeman
      uses: devmasx/brakeman-linter-action@v1.0.0
      env:
        REPORT_PATH: output.sarif.json
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
